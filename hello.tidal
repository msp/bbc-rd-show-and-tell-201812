
cps 1



-- Hello World! ----------------------------------------------------------------

d1 $ sound "bd bd bd cp"

-- d1 $ sound "bd*2 hh sd hc:4"

-- Cycles ----------------------------------------------------------------------

-- One cycle per second, events are squashed to fit

d1 $ sound "bd hh sd hc:4"

d1 $ sound "bd hh sd hc:4 bd bd"

d1 $ sound "bd sd hh cp mt arpy drum odx bd arpy bass2 feel future"

-- Groups ----------------------------------------------------------------------

d1 $ sound "[bd sd sd] cp"
d1 $ sound "bd [sd sd]"
d1 $ sound "bd [sd sd sd]"
d1 $ sound "bd [sd sd sd sd]"
d1 $ sound "[bd bd] [sd sd sd sd]"
d1 $ sound "[bd bd bd] [sd sd]"
d1 $ sound "[bd bd bd bd] [sd]"

-- Layers ----------------------------------------------------------------------

d1 $ sound "[bd bd bd, sd cp sd cp]"

-- Density ---------------------------------------------------------------------

d1 $ sound "bd*2 sd hh*4 hh/2"

d1 $ sound "bd/2"

-- Transformations -------------------------------------------------------------

d1 $ sound "bd*2 [bd [sn sn*2 sn] sn]"

d1 $ rev (sound "bd*2 [bd [sn sn*2 sn] sn]")

d1 $ every 4 (rev) (sound "bd*2 [bd [sn sn*2 sn] sn]")

d1 $ slow 4 $ sound "bd*2 [bd [sn sn*2 sn] sn]"

d1 $ fast 4 $ sound "bd*2 [bd [sn sn*2 sn] sn]"

d1 $ every 4 (fast 4) $ sound "bd*2 [bd [sn sn*2 sn] sn]"


-- FX --------------------------------------------------------------------------

d1 $ sound "bd*4"
# crush "4"
# speed "2"

d1 $ sound "bd*4"
# crush "4"
# speed "2"
# gain "1 0.8 0.5 0.7"

d1
$ every 2 (|+| speed "0.4")
$ sound "arpy*8"
# speed "1"

d1 $ every 2 (|+| speed "0.2")
$ sound "arpy*16"
# speed "1"
# room (range 0.1 0.6 (slow 3 (sine)))
# size (range 0.1 0.8 (slow 8 (sine)))

d1
$ every 3 (|-| up "3")
$ every 2 (|+| up "5")
$ sound "arpy*8"
# up "0 2 4 5"

d1 silence

-- Euclidean -------------------------------------------------------------------


-- If you give two numbers in parenthesis after an element in a pattern,
-- then Tidal will distribute
-- the first number of sounds equally across the second number of steps:

d1
$ sound "bd(3,8)"

d1
$ slow 2
$ sound "bd(3,8) sn(5,8)"


-- These types of sequences use “Bjorklund’s algorithm”, which wasn’t made for
-- music but for an application in nuclear physics.
--
-- (2,5) : A thirteenth century Persian rhythm called Khafif-e-ramal.
-- (3,4) : The archetypal pattern of the Cumbia from Colombia,
-- as well as a Calypso rhythm from Trinidad.
-- (3,5,2) : Another thirteenth century Persian rhythm by the name of Khafif-e-ramal,
-- as well as a Rumanian folk-dance rhythm.
-- (3,7) : A Ruchenitza rhythm used in a Bulgarian folk-dance.
-- (3,8) : The Cuban tresillo pattern.
-- (4,7) : Another Ruchenitza Bulgarian folk-dance rhythm.
-- (4,9) : The Aksak rhythm of Turkey.
-- (4,11) : The metric pattern used by Frank Zappa in his piece titled Outside Now.
-- (5,6) : Yields the York-Samai pattern, a popular Arab rhythm.
-- (5,7) : The Nawakhat pattern, another popular Arab rhythm.
-- (5,8) : The Cuban cinquillo pattern.
-- (5,9) : A popular Arab rhythm called Agsag-Samai.
-- (5,11) : The metric pattern used by Moussorgsky in Pictures at an Exhibition.
-- (5,12) : The Venda clapping pattern of a South African children’s song.
-- (5,16) : The Bossa-Nova rhythm necklace of Brazil.
-- (7,8) : A typical rhythm played on the Bendir (frame drum).
-- (7,12) : A common West African bell pattern.
-- (7,16,14) : A Samba rhythm necklace from Brazil.
-- (9,16) : A rhythm necklace used in the Central African Republic.
-- (11,24,14) : A rhythm necklace of the Aka Pygmies of Central Africa.
-- (13,24,5) : Another rhythm necklace of the Aka Pygmies of the upper Sangha.
--

d1 $ sound "[808bd:1(3,8)]"

d1 $ sound "[808bd:1(3,8), 808sd:3(3,8)]"

d2 $ sound "[808ht:1(2,6)]"



-- Polymeters ------------------------------------------------------------------


-- A polymeter pattern is one where two patterns have different sequence lengths,
-- but share the same pulse or tempo.


d1
$ sound "{808bd hh sn cp:2, arpy sine:1 drum notes can}"

d1
$ sound "{808bd:1 808bd:1 808bd:1 808bd, arpy sine:1 drum notes can}"

d2
$ fast 8
$ sound "~ <imp>"
# gain 0.9
# speed 1
# lpf (range 500 8500 $ slow 16 $ cosine)

# begin (range 0.4 0.9 $ slow 4 $ saw)
# pan (range 1 0 $ slow 2 $ sine)

d3 $ jux (# accelerate "-0.3")
$ s "supermandolin*8"
# midinote "[80!6 78]/8"
# sustain "1 0.25 2 1"
# gain 0.8
